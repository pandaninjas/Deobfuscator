package io.github.repooper.packetevents.utils.netty.bytebuf;

import io.netty.buffer.Unpooled;
import me.frep.vulcan.spigot.check.AbstractCheck;
import net.minecraft.util.io.netty.buffer.ByteBuf;
import net.minecraft.util.io.netty.util.internal.EmptyArrays;

public final class ByteBufUtil_7 implements ByteBufUtil {
    @Override
    public Object Vulcan_y() {
        return Unpooled.buffer();
    }

    @Override
    public Object Vulcan_u(byte[] var1) {
        return Unpooled.wrappedBuffer(var1);
    }

    @Override
    public void Vulcan_G(Object var1) {
        ((ByteBuf)var1).retain();
    }

    @Override
    public void Vulcan_u(Object var1) {
        ((ByteBuf)var1).release();
    }

    @Override
    public byte[] Vulcan_S(Object var1, long var2) {
        String[] var10000 = ByteBufUtil_8.Vulcan_O();
        ByteBuf var6 = (ByteBuf)var1;
        String[] var5 = var10000;
        int var8 = var6.refCnt();
        String[] var10001 = var5;
        if (var2 > 0L) {
            if (var5 != null) {
                if (var8 < 1) {
                    return EmptyArrays.EMPTY_BYTES;
                }

                var8 = var6.hasArray();
            }

            var10001 = var5;
        }

        if (var10001 != null) {
            if (var8 != 0) {
                byte[] var7 = var6.array();
                if (var5 != null) {
                    return var7;
                }

                AbstractCheck.Vulcan_t(!AbstractCheck.Vulcan_a());
            }

            var8 = var6.readableBytes();
        }

        byte[] var9 = new byte[var8];
        var6.getBytes(var6.readerIndex(), var9);
        return var9;
    }

    @Override
    public void Vulcan_S(Object var1, byte[] var2, long var3) {
        String[] var10000 = ByteBufUtil_8.Vulcan_O();
        ByteBuf var7 = (ByteBuf)var1;
        String[] var6 = var10000;
        int var9 = var7.refCnt();
        if (var6 != null) {
            if (var9 < 1) {
                return;
            }

            var9 = var2.length;
        }

        int var8 = var9;
        if (var3 >= 0L && var6 != null) {
            if (var7.capacity() < var8) {
                var7.capacity(var8);
            }

            var7.setBytes(0, var2);
        }
    }
}
