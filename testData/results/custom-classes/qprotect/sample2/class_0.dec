import java.lang.invoke.ConstantCallSite;
import java.lang.invoke.MethodHandle;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import net.md_5.bungee.api.ChatColor;
import net.md_5.bungee.api.ChatMessageType;
import net.md_5.bungee.api.chat.TextComponent;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import pl.freszu.fastcodezaczarowania.Main;

public class class_0 {
    public static final int field_0;
    public static final String field_1 = "((?<=%1$s)|(?=%1$s))";

    public static List<String> method_0(List<String> var0) {
        ArrayList var1 = new ArrayList();
        if (var0 == null) {
            return var1;
        } else {
            var0.forEach(var1x -> var1.add(method_5(var1x)));
            return var1;
        }
    }

    public static void method_1(Player var0, String var1, String var2) {
        var0.sendTitle(method_5(var1), method_5(var2));
    }

    public static ConstantCallSite method_2(Object var0) {
        return new ConstantCallSite((MethodHandle)var0);
    }

    public static List<String> method_3(ItemStack var0, Player var1) {
        ItemMeta var2 = var0.getItemMeta();
        List var3 = var2.getLore();
        return (List<String>)(var3 == null ? new ArrayList<>() : var3.stream().map(class_0::method_5).collect(Collectors.toList()));
    }

    private class_0() {
        throw new UnsupportedOperationException("This is a utility class and cannot be instantiated");
    }

    public static void method_4(Player var0, String var1) {
        if (var0 != null && var1 != null) {
            String var2 = Bukkit.getServer().getClass().getPackage().getName();
            if (!(var2 = var2.substring(var2.lastIndexOf(".") + 1)).startsWith("v1_9_R") && !var2.startsWith("v1_8_R")) {
                var0.sendMessage(ChatMessageType.ACTION_BAR, TextComponent.fromLegacyText(method_5(var1)));
            } else {
                try {
                    Class var3 = Class.forName("org.bukkit.craftbukkit." + var2 + ".entity.CraftPlayer");
                    Object var4 = var3.cast(var0);
                    Class var5 = Class.forName("net.minecraft.server." + var2 + ".PacketPlayOutChat");
                    Class var6 = Class.forName("net.minecraft.server." + var2 + ".Packet");
                    Class var7 = Class.forName("net.minecraft.server." + var2 + (var2.equalsIgnoreCase("v1_8_R1") ? ".ChatSerializer" : ".ChatComponentText"));
                    Class var8 = Class.forName("net.minecraft.server." + var2 + ".IChatBaseComponent");
                    Method var9 = null;
                    if (var2.equalsIgnoreCase("v1_8_R1")) {
                        var9 = var7.getDeclaredMethod("a", String.class);
                    }

                    Object var10 = var2.equalsIgnoreCase("v1_8_R1")
                        ? var8.cast(var9.invoke(var7, "{'text': '" + var1 + "'}"))
                        : var7.getConstructor(String.class).newInstance(var1);
                    Object var11 = var5.getConstructor(var8, byte.class).newInstance(var10, (byte)2);
                    Method var12 = var3.getDeclaredMethod("getHandle");
                    Object var13 = var12.invoke(var4);
                    Field var14 = var13.getClass().getDeclaredField("playerConnection");
                    Object var15 = var14.get(var13);
                    Method var16 = var15.getClass().getDeclaredMethod("sendPacket", var6);
                    var16.invoke(var15, var11);
                } catch (Exception var17) {
                    var17.printStackTrace();
                }
            }
        }
    }

    public static String method_5(String var0) {
        String[] var1 = var0.split(String.format("((?<=%1$s)|(?=%1$s))", "&"));
        StringBuilder var2 = new StringBuilder();

        for (int var3 = 0; var3 < var1.length; var3++) {
            if (var1[var3].equalsIgnoreCase("&")) {
                if (var1[++var3].charAt(0) == '#') {
                    var2.append(ChatColor.of(var1[var3].substring(0, 7)) + var1[var3].substring(7));
                } else {
                    var2.append(org.bukkit.ChatColor.translateAlternateColorCodes('&', "&" + var1[var3]).replace(">>", "Â»"));
                }
            } else {
                var2.append(var1[var3]);
            }
        }

        return var2.toString();
    }

    static {
        Main.				
 	
	

	
		
();
    }
}
